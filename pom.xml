<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.authorization.life</groupId>
    <artifactId>authorization-life</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>authorization-life</name>

    <description>Authorization Engineering</description>

    <properties>
        <!--当前工程中的所有模块，版本统一进行控制-->
        <revision>1.0.0</revision>
        <!-- resource.delimiter 标签参考：https://www.jianshu.com/p/4410613bb36f -->
        <resource.delimiter>@</resource.delimiter>

        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <!--
            查看版本依赖关系:
            spring-cloud 官网：  https://spring.io/projects/spring-cloud
            spring-cloud-alibaba 官网：  https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E
            springboot 官网： https://spring.io/projects/spring-boot
            2022年9月4日
            得出结果：
            boot：2.7.3
            cloud：2021.0.3
            cloud-alibaba：2.2.8.RELEASE
            spring-security：5.7.3
            authorization-server：0.3.1
        -->
        <!--基本依赖-->
        <spring-boot.version>2.7.6</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <dubbo.version>3.2.0-beta.3</dubbo.version>
        <jackson-bom.version>2.14.1</jackson-bom.version>
        <knife4j.version>4.0.0</knife4j.version>

        <!--权限认证依赖-->
        <spring-security.version>5.8.1</spring-security.version>
        <nimbus-jose-jwt.version>9.25.6</nimbus-jose-jwt.version>
        <oauth2-oidc-sdk.version>10.1</oauth2-oidc-sdk.version>
        <oauth2-authorization-server.version>0.4.0</oauth2-authorization-server.version>

        <!--数据库依赖-->
        <mysql.version>8.0.31</mysql.version>
        <druid.version>1.2.15</druid.version>
        <mybatis-plus.version>3.5.2</mybatis-plus.version>
        <pagehelper.version>1.4.6</pagehelper.version>
        <!--工具依赖-->
        <hutool.version>5.8.10</hutool.version>
        <guava.version>31.1-jre</guava.version>
        <orika.version>1.5.4</orika.version>
        <easyexcel.version>3.1.3</easyexcel.version>
        <jasypt.version>3.0.4</jasypt.version>
    </properties>

    <modules>
        <module>life-parent</module>
        <module>life-start-parent</module>
        <module>life-base</module>

        <module>life-gateway</module>
        <module>life-authserver</module>
        <module>life-system</module>
        <module>life-remote-api</module>

    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>life-parent</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>life-common</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>life-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>life-utils</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>mybatis-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>redis-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>knife4j-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>valid-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>excel-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>dubbo-start-life</artifactId>
                <version>${revision}</version>
            </dependency>
            <!--对于api工程可以在各个子服务工程中引入并设置版本号-start-->
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>authserver-remote-api</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.authorization.life</groupId>
                <artifactId>system-remote-api</artifactId>
                <version>${revision}</version>
            </dependency>
            <!--对于api工程可以在各个子服务工程中引入并设置版本号-end-->
            <!--以上为工程内部的子工程-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--bean之间的转换-->
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika.version}</version>
            </dependency>
            <!--excel工具类-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <!--配置文件加解密-->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <!--以上为工具包依赖-->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!--以上为数据库连接-->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>oauth2-oidc-sdk</artifactId>
                <version>${oauth2-oidc-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-authorization-server</artifactId>
                <version>${oauth2-authorization-server.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${spring-security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--以上为security+oauth2-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-dependencies</artifactId>
                <version>${knife4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${dubbo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--以上为基础的导入依赖-->
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <!--maven-compiler-plugin插件可以指定项目源码的jdk版本，编译后的jdk版本，以及编码。-->
                <!-- 参考: https://blog.csdn.net/liupeifeng3514/article/details/80236077 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <testSource>${java.version}</testSource>
                        <testTarget>${java.version}</testTarget>
                    </configuration>
                </plugin>
                <!--maven-source-plugin 这个插件专门负责将项目源文件打成包的-->
                <!--参考: https://blog.csdn.net/liaowenxiong/article/details/124879376 -->
                <!--提供项目自动将源码打包并发布的功能, maven会自动将source install到repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <!-- 执行生命周期阶段 verify 时会调用该插件的目标 jar-no-fork，该目标会将 jar 文件安装到本地的 Maven 仓库中。 -->
                            <phase>verify</phase>
                            <goals>
                                <!--在生命周期后执行绑定的source插件的goals -->
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <!-- 生成的jar中，包含pom.xml和pom.properties这两个文件 -->
                            <addMavenDescriptor>true</addMavenDescriptor>
                            <!-- 生成MANIFEST.MF的设置 -->
                            <manifest>
                                <!--这个属性特别关键，如果没有这个属性，有时候我们引用的包maven库
                                下面可能会有多个包，并且只有一个是正确的，其余的可能是带时间戳的，
                                此时会在classpath下面把那个带时间戳的给添加上去，
                                然后我们 在依赖打包的时候，打的是正确的，所以两头会对不上，报错。 -->
                                <useUniqueVersions>false</useUniqueVersions>
                                <!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 -->
                                <addClasspath>true</addClasspath>
                                <!-- 这个jar所依赖的jar包添加classPath的时候的前缀，如果这个jar本身
                                和依赖包在同一级目录，则不需要添加 -->
                                <classpathPrefix>lib/</classpathPrefix>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!--springboot启动类的jar包-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <!--
                    配置参考：
                    https://blog.csdn.net/tian830937/article/details/119525273
                    -->
                    <configuration>
                        <addResources>true</addResources>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
